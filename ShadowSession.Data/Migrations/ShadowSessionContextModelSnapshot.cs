// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShadowSession.Data;

#nullable disable

namespace ShadowSession.Data.Migrations
{
    [DbContext(typeof(ShadowSessionContext))]
    partial class ShadowSessionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ShadowSession.Data.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("program_id")
                        .HasColumnOrder(0);

                    b.Property<bool>("AutomaticRecordingEnabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("automatic_recording_enabled")
                        .HasColumnOrder(4);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("display_name")
                        .HasColumnOrder(1);

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("filename")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_active")
                        .HasColumnOrder(7);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("path")
                        .HasColumnOrder(3);

                    b.Property<int?>("RecordingBitrate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recording_bitrate")
                        .HasColumnOrder(6);

                    b.Property<int?>("RecordingFramerate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recording_framerate")
                        .HasColumnOrder(5);

                    b.HasKey("ProgramId");

                    b.ToTable("programs");
                });

            modelBuilder.Entity("ShadowSession.Data.Recording", b =>
                {
                    b.Property<int>("RecordingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("recording_id")
                        .HasColumnOrder(0);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("file_path")
                        .HasColumnOrder(2);

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("session_id")
                        .HasColumnOrder(1);

                    b.HasKey("RecordingId");

                    b.HasIndex("SessionId");

                    b.ToTable("recordings");
                });

            modelBuilder.Entity("ShadowSession.Data.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("session_id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_date")
                        .HasColumnOrder(3);

                    b.Property<int>("ProgramId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("program_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_date")
                        .HasColumnOrder(2);

                    b.HasKey("SessionId");

                    b.HasIndex("ProgramId");

                    b.ToTable("sessions");
                });

            modelBuilder.Entity("ShadowSession.Data.UserSetting", b =>
                {
                    b.Property<int>("UserSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_setting_id")
                        .HasColumnOrder(0);

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT")
                        .HasColumnName("default_value")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description")
                        .HasColumnOrder(6);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("display_name")
                        .HasColumnOrder(5);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("key")
                        .HasColumnOrder(2);

                    b.Property<int>("Kind")
                        .HasColumnType("INTEGER")
                        .HasColumnName("kind")
                        .HasColumnOrder(1);

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sort_order")
                        .HasColumnOrder(8);

                    b.Property<string>("Value")
                        .HasColumnType("TEXT")
                        .HasColumnName("value")
                        .HasColumnOrder(4);

                    b.Property<bool>("ValueRequired")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_value_required")
                        .HasColumnOrder(7);

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER")
                        .HasColumnName("visible")
                        .HasColumnOrder(9);

                    b.HasKey("UserSettingId");

                    b.ToTable("user_settings");
                });

            modelBuilder.Entity("ShadowSession.Data.Recording", b =>
                {
                    b.HasOne("ShadowSession.Data.Session", "Session")
                        .WithMany("Recordings")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("ShadowSession.Data.Session", b =>
                {
                    b.HasOne("ShadowSession.Data.Program", "Program")
                        .WithMany("Sessions")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("ShadowSession.Data.Program", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ShadowSession.Data.Session", b =>
                {
                    b.Navigation("Recordings");
                });
#pragma warning restore 612, 618
        }
    }
}
